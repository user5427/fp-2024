stack run fp2024-two

>>> k
PARSE ERROR:Unrecognized query format
>>> create_stop(S1, PlsHelp, 0.55, 0.66)
Stop Name "PlsHelp" created
>>> create_route(R1, imabouttodiefromhaskell, S1, S2, S3)
ERROR:Element not found
>>> create_path(P1, path, 1.0, S1, S2)
ERROR:Element not found
>>> create_stop(S2, Pamiske, 0.40, 0.80)
Stop Name "Pamiske" created
>>> create_route(R1, imabouttodiefromhaskell, S1, S2)
Route Name "imabouttodiefromhaskell" created
>>> create_path(P1, path, 1.0, S1, S2)
Path Name "path" created
>>> find_next_stop(S1, R1)
ERROR:Next stop not found
>>> find_previous_stop(S1, R1)
ERROR:Previous stop not found
>>> create_stop(S3, Jovaro, 1.55, 2.66)
Stop Name "Jovaro" created
>>> create_stop(S3, Jovaro, 1.55, 2.66)
ERROR:Stop already exists
>>> create_stop(S4, Gelvonu, .55, 2.66)
PARSE ERROR:Unrecognized query format
>>> create_stop(S4, Gelvonu, 4.55, 2.66)
Stop Name "Gelvonu" created
>>> create_route(R2, 53_fabijoniskes, S2, S3, S4)
Route Name "53_fabijoniskes" created
>>> set_next_stop(S4, R2, S3)
Next stop set
>>> set_next_stop(S3, R2, S2)
Next stop set
>>> set_previous_stop(S2, R2, S3)
Previous stop set
>>> set_previous_stop(S3, R2, S4)
Previous stop set
>>> find_next_stop(S3, R2)
Next stop found: StopId 'S' 2
>>> find_previous_stop(S2, R2)
Previous stop found: StopId 'S' 3
>>> distance_between_stops(S1, S2)
Distance between stops is 0.20518284
>>> create_route(R3, test, S1, S2, S3, S4)
Route Name "test" created
connect_route_stops_by_min_dist(R3)
ERROR:Distance between stops is 0
>>> create_trip(T1, trip, S2, S3, S4)
Trip Name "trip" created
>>> validate_trip(T1)
ERROR:Trip stops or paths are not connected
>>> cleanup_trop(T1)
PARSE ERROR:Unrecognized query format
>>> cleanup_trip(T1)
Trip cleaned up
>>> validate_trip(T1)
Trip stops connected: True
>>> trip_distance(T1)
Trip distance: 0.0 -- biski pergerai sutvarke



----- kita sesija
>>> create_stop(S1, Seskine, 0.55, 0.66)
Stop Name "Seskine" created
>>> create_stop(S2, Gelvoneliu, 1.55, 1.66)
Stop Name "Gelvoneliu" created
>>> create_stop(S3, Gelvonu, 2.55, 2.66)
Stop Name "Gelvonu" created
>>> create_stop(S4, Jovaro, 3.55, 3.66)
Stop Name "Jovaro" created
>>> create_route(R1, imabouttodiefromhaskell, S1, S2, S3, S4)
Route Name "imabouttodiefromhaskell" created
>>> connect_route_stops_by_min_dist(R1)
Route stops connected by min distance
>>> check_if_route_stops_connected(R1)
Route stops connected: True
>>> create_route(R2, interestinggg, create_stop(S5, Kalvarijos, 6.55, 6.66), create_stop(S6, Jeruzale, 7.55, 7.66), create_stop(S7, Zalieji_ezereliai, 8.55, 8.66))
Route Name "interestinggg" created
>>> connect_route_stops_by_min_dist(R2)
Route stops connected by min distance
>>> join_two_routes(R1, R2, R3, new_route)
Routes joined
>>> create_trip(T1, trippy, S1, S2, S3)
Trip Name "trippy" created
>>> validate_trip(T1)
Trip stops connected: True
>>> trip_distance(T1)
Trip distance: 2.828427
>>> cleanup_trip(T1)
Trip cleaned up
>>> trip_distance(T1)
Trip distance: 2.828427
>>> create_path(P1, path, 1.0, S1, S2)
Path Name "path" created
>>> create_trip(T2, trip, S1, S2, P1, S3)
Trip Name "trip" created
>>> validate_trip(T2)
ERROR:Trip stops or paths are not connected
>>> create_trip(T3, trip2, S1, P1, S2, S3)
Trip Name "trip2" created
>>> validate_trip(T3)
Trip stops connected: True
>>> trip_distance(T3)
Trip distance: 2.4142137
>> join_two_trips(T2, T3, T4, evenMore)
Trips joined
>>> validate_trip(T4)
ERROR:Trip stops or paths are not connected
>>> cleanup_trip(T4)
Trip cleaned up
>>> validate_trip(T4)
Trip stops connected: True
>>> trip_distance(T4)
Trip distance: 0.0 -- probably failed to cleanup because the given trips did not connect ends
>>> create_stop(S5, PLSWORK, 0.585, 0.866); create_stop(S6, stoppp, 0.5585, 0.76)

