parseQuery "create_stop(S1, PlsHelp, 0.55, 0.66)"
Right CreateStop StopId 'S' 1 Name "PlsHelp" Point (CoordX 0.55) (CoordY 0.66)

parseQuery "create_route(R1, imabouttodiefromhaskell, S1, S2, S3)"
Right CreateRoute RouteId 'R' 1 Name "imabouttodiefromhaskell" [StopId 'S' 1,StopId 'S' 2,StopId 'S' 3]

parseQuery "create_path(P1, path, 1.0, S1, S2)"
Right CreatePath PathId 'P' 1 Name "path" PathLenght 1.0 StopId 'S' 1 StopId 'S' 2

parseQuery "create_trip(T1, trip, S1, S2, P1, S3)"
Right CreateTrip TripId 'T' 1 Name "trip" [QueryStopOrPath' (StopId' (StopId 'S' 1)),QueryStopOrPath' (StopId' (StopId 'S' 2)),QueryStopOrPath' (PathId' (PathId 'P' 1)),QueryStopOrPath' (StopId' (StopId 'S' 3))]

parseQuery "find_next_stop(S1, R1)"
Right FindNextStop StopId 'S' 1 RouteId 'R' 1

parseQuery "find_previous_stop(S1, R1)"
Right FindPreviousStop StopId 'S' 1 RouteId 'R' 1

parseQuery "set_next_stop(S1, R1, S2)"
Right SetNextStop StopId 'S' 1 RouteId 'R' 1 StopId 'S' 2

parseQuery "set_previous_stop(S1, R1, S2)"
Right SetPreviousStop StopId 'S' 1 RouteId 'R' 1 StopId 'S' 2

parseQuery "join_two_trips(T1, T2, T3, NewTrip)"
Right JoinTwoTrips Trip' (TripId 'T' 1) Trip' (TripId 'T' 2) TripId 'T' 3 Name "NewTrip"

parseQuery "assign_stop_to_route(S1, R1)"
Right AssignStopToRoute StopId 'S' 1 RouteId 'R' 1

parseQuery "distance_between_stops(S1, S2)"
Right DistanceBetweenStops StopId 'S' 1 StopId 'S' 2

parseQuery "check_if_route_stops_connected(R1)"
Right CheckIfRouteStopsConnected RouteId 'R' 1

parseQuery "connect_route_stops_by_min_dist(R1)"
Right ConnectRouteStopsByMinDistance RouteId 'R' 1

parseQuery "trip_distance(T1)"
Right TripDistance Trip' (TripId 'T' 1)

parseQuery "validate_trip(T1)"
Right ValidateTrip Trip' (TripId 'T' 1)

parseQuery "cleanup_trip(T1)"
Right CleanupTrip Trip' (TripId 'T' 1)

parseQuery "join_two_routes(R1, R2, R3, new_route)"
Right JoinTwoRoutes Route' (RouteId 'R' 1) Route' (RouteId 'R' 2) RouteId 'R' 3 Name "new_route"

parseQuery "join_two_routes_at_stop(R1, R2, S1, R3, NewRoute)"
Right JoinTwoRoutesAtStop Route' (RouteId 'R' 1) Route' (RouteId 'R' 2) QueryStopOrCreatOrNextPrevStop (StopId 'S' 1) RouteId 'R' 3 Name "NewRoute"

parseQuery "create_trip(T74, xg, find_next_stop(S7, R449), create_stop(S5, _, 67.4, 0), create_stop(S08, _, -11, -2.7), find_previous_stop(S6, R105))"
Right CreateTrip TripId 'T' 74 Name "xg" [FindNextStop' FindNextStop StopId 'S' 7 RouteId 'R' 449,CreateStop' CreateStop StopId 'S' 5 Name "_" Point (CoordX 67.4) (CoordY 0.0),CreateStop' CreateStop StopId 'S' 8 Name "_" Point (CoordX (-11.0)) (CoordY (-2.7)),FindPreviousStop' FindPreviousStop StopId 'S' 6 RouteId 'R' 105]

parseQuery "join_two_trips(T7, create_trip(T796, _, find_next_stop(S63, R6)), T0, W)"
Right JoinTwoTrips Trip' (TripId 'T' 7) CreateTrip' CreateTrip TripId 'T' 796 Name "_" [FindNextStop' FindNextStop StopId 'S' 63 RouteId 'R' 6] TripId 'T' 0 Name "W"

parseQuery "join_two_routes_at_stop(join_two_routes_at_stop(R11, R242, create_stop(S8, __e5, 6.7, -3), R2, _), join_two_routes_at_stop(create_route(R2, 29e, S4, S494), join_two_routes(R7, join_two_routes(create_route(R59, 4, S35), R23, R622, 4), R24, o6S), create_stop(S4, 9, -7, 777.6), R2, _), S1, R3, 1)"
Right JoinTwoRoutesAtStop JoinTwoRoutesAtStop' JoinTwoRoutesAtStop Route' (RouteId 'R' 11) Route' (RouteId 'R' 242) QueryStopOrCreatOrNextPrevCreateStop CreateStop StopId 'S' 8 Name "__e5" Point (CoordX 6.7) (CoordY (-3.0)) RouteId 'R' 2 Name "_" JoinTwoRoutesAtStop' JoinTwoRoutesAtStop CreateRoute' CreateRoute RouteId 'R' 2 Name "29e" [StopId 'S' 4,StopId 'S' 494] JoinTwoRoutes' JoinTwoRoutes Route' (RouteId 'R' 7) JoinTwoRoutes' JoinTwoRoutes CreateRoute' CreateRoute RouteId 'R' 59 Name "4" [StopId 'S' 35] Route' (RouteId 'R' 23) RouteId 'R' 622 Name "4" RouteId 'R' 24 Name "o6S" QueryStopOrCreatOrNextPrevCreateStop CreateStop StopId 'S' 4 Name "9" Point (CoordX (-7.0)) (CoordY 777.6) RouteId 'R' 2 Name "_" QueryStopOrCreatOrNextPrevStop (StopId 'S' 1) RouteId 'R' 3 Name "1"

parseQuery "join_two_routes(join_two_routes(R8555, join_two_routes_at_stop(join_two_routes(join_two_routes(join_two_routes_at_stop(join_two_routes(join_two_routes_at_stop(join_two_routes_at_stop(create_route(R510, q8, S8, S03), R69, S6, R92, _), R1, S5, R5, e_), create_route(R7, _, S6), R39, _), join_two_routes_at_stop(join_two_routes_at_stop(R18, join_two_routes_at_stop(R04, R0, create_stop(S30, _, 0, -0), R53, g__), find_next_stop(S4, R0), R28, d), create_route(R0, h3, S42), find_previous_stop(S1, R647), R9, _), find_next_stop(S1, R15), R3, E), join_two_routes_at_stop(create_route(R7, b, S6502, S09), create_route(R73, e, S96, S4, S362), create_stop(S975, GYU, -75, -8365), R6, _O), R0, _), join_two_routes(R0, R8, R2, i), R6, GAC), R1, find_previous_stop(S65, R53), R13, _), R3, 8h), R4, R8907, k)"
Right JoinTwoRoutes JoinTwoRoutes' JoinTwoRoutes Route' (RouteId 'R' 8555) JoinTwoRoutesAtStop' JoinTwoRoutesAtStop JoinTwoRoutes' JoinTwoRoutes JoinTwoRoutes' JoinTwoRoutes JoinTwoRoutesAtStop' JoinTwoRoutesAtStop JoinTwoRoutes' JoinTwoRoutes JoinTwoRoutesAtStop' JoinTwoRoutesAtStop JoinTwoRoutesAtStop' JoinTwoRoutesAtStop CreateRoute' CreateRoute RouteId 'R' 510 Name "q8" [StopId 'S' 8,StopId 'S' 3] Route' (RouteId 'R' 69) QueryStopOrCreatOrNextPrevStop (StopId 'S' 6) RouteId 'R' 92 Name "_" Route' (RouteId 'R' 1) QueryStopOrCreatOrNextPrevStop (StopId 'S' 5) RouteId 'R' 5 Name "e_" CreateRoute' CreateRoute RouteId 'R' 7 Name "_" [StopId 'S' 6] RouteId 'R' 39 Name "_" JoinTwoRoutesAtStop' JoinTwoRoutesAtStop JoinTwoRoutesAtStop' JoinTwoRoutesAtStop Route' (RouteId 'R' 18) JoinTwoRoutesAtStop' JoinTwoRoutesAtStop Route' (RouteId 'R' 4) Route' (RouteId 'R' 0) QueryStopOrCreatOrNextPrevCreateStop CreateStop StopId 'S' 30 Name "_" Point (CoordX 0.0) (CoordY (-0.0)) RouteId 'R' 53 Name "g__" QueryStopOrCreatOrNextPrevFindNextStop FindNextStop StopId 'S' 4 RouteId 'R' 0 RouteId 'R' 28 Name "d" CreateRoute' CreateRoute RouteId 'R' 0 Name "h3" [StopId 'S' 42] QueryStopOrCreatOrNextPrevFindPreviousStop FindPreviousStop StopId 'S' 1 RouteId 'R' 647 RouteId 'R' 9 Name "_" QueryStopOrCreatOrNextPrevFindNextStop FindNextStop StopId 'S' 1 RouteId 'R' 15 RouteId 'R' 3 Name "E" JoinTwoRoutesAtStop' JoinTwoRoutesAtStop CreateRoute' CreateRoute RouteId 'R' 7 Name "b" [StopId 'S' 6502,StopId 'S' 9] CreateRoute' CreateRoute RouteId 'R' 73 Name "e" [StopId 'S' 96,StopId 'S' 4,StopId 'S' 362] QueryStopOrCreatOrNextPrevCreateStop CreateStop StopId 'S' 975 Name "GYU" Point (CoordX (-75.0)) (CoordY (-8365.0)) RouteId 'R' 6 Name "_O" RouteId 'R' 0 Name "_" JoinTwoRoutes' JoinTwoRoutes Route' (RouteId 'R' 0) Route' (RouteId 'R' 8) RouteId 'R' 2 Name "i" RouteId 'R' 6 Name "GAC" Route' (RouteId 'R' 1) QueryStopOrCreatOrNextPrevFindPreviousStop FindPreviousStop StopId 'S' 65 RouteId 'R' 53 RouteId 'R' 13 Name "_" RouteId 'R' 3 Name "8h" Route' (RouteId 'R' 4) RouteId 'R' 8907 Name "k"

parseQuery "join_two_trips(T5, create_trip(T2, B, create_stop(S65, 1, -48.952, 0.6), find_next_stop(S050, R65)), T99, 1X4R)"
Right JoinTwoTrips Trip' (TripId 'T' 5) CreateTrip' CreateTrip TripId 'T' 2 Name "B" [CreateStop' CreateStop StopId 'S' 65 Name "1" Point (CoordX (-48.952)) (CoordY 0.6),FindNextStop' FindNextStop StopId 'S' 50 RouteId 'R' 65] TripId 'T' 99 Name "1X4R"

emptyState
stateWithQuery (emptyState) "create_stop(S1, PlsHelp, 0.55, 0.66)"
Right (Just "Stop Name \"PlsHelp\" created",
       State {stops = [Stop (StopId 'S' 1) (Name "PlsHelp") (Point (CoordX 0.55) (CoordY 0.66)) [] [] []], 
              routes = [], 
              paths = [], 
              trips = []})

stateWithQuery (emptyState) "create_route(R1, imabouttodiefromhaskell, S1, S2, S3)"
"Element not found"

stateWithQuery (emptyState) "create_path(P1, path, 1.0, S1, S2)"
"Element not found"

stateWithQuery (emptyState) "create_trip(T1, trip, S1, S2, P1, S3)"
"Element not found" - stops or paths not found basically

multiQuery (stateWithQuery (emptyState) "create_stop(S1, PlsHelp, 0.55, 0.66)") "create_route(R1, imabouttodiefromhaskell, S1)"
Right (Just "Route Name \"imabouttodiefromhaskell\" created",
    State {stops = [Stop (StopId 'S' 1) (Name "PlsHelp") (Point (CoordX 0.55) (CoordY 0.66)) [] [] [RouteId 'R' 1]], 
            routes = [Route (RouteId 'R' 1) (Name "imabouttodiefromhaskell") [StopId 'S' 1]], 
            paths = [], 
            trips = []})

multiQuery (multiQuery (stateWithQuery (emptyState) "create_stop(S1, PlsHelp, 0.55, 0.66)") "create_route(R1, imabouttodiefromhaskell, S1)") "create_stop(S1, PlsHelp, 0.55, 0.66)"
Right (Just "Stop Name \"PlsHelp\" created",
    State {stops = [Stop (StopId 'S' 1) (Name "PlsHelp") (Point (CoordX 0.55) (CoordY 0.66)) [] [] [RouteId 'R' 1]], 
        routes = [Route (RouteId 'R' 1) (Name "imabouttodiefromhaskell") [StopId 'S' 1]], 
        paths = [], 
        trips = []})

multiQuery (multiQuery (stateWithQuery (emptyState) "create_stop(S1, PlsHelp, 0.55, 0.66)") "create_route(R1, imabouttodiefromhaskell, S1)") "create_stop(S1, PlsHelp, 0.55, 0.66)"
Left "Stop already exists"

multiQuery (multiQuery (stateWithQuery (emptyState) "create_stop(S1, PlsHelp, 0.55, 0.66)") "create_route(R1, imabouttodiefromhaskell, S1)") "create_stop(S2, PlsHelp, 0.55, 0.66)"
Right (Just "Stop Name \"PlsHelp\" created",
    State {stops = [Stop (StopId 'S' 1) (Name "PlsHelp") (Point (CoordX 0.55) (CoordY 0.66)) [] [] [RouteId 'R' 1],Stop (StopId 'S' 2) (Name "PlsHelp") (Point (CoordX 0.55) (CoordY 0.66)) [] [] []], 
    routes = [Route (RouteId 'R' 1) (Name "imabouttodiefromhaskell") [StopId 'S' 1]], 
    paths = [], 
    trips = []})

multiQuery (multiQuery (multiQuery (stateWithQuery (emptyState) "create_stop(S1, PlsHelp, 0.55, 0.66)") "create_route(R1, imabouttodiefromhaskell, S1)") "create_stop(S2, PlsHelp, 0.55, 0.66)") "assign_stop_to_route(S2, R1)"
Right (Just "Stop Name \"PlsHelp\" assigned to route.",
    State {stops = [Stop (StopId 'S' 1) (Name "PlsHelp") (Point (CoordX 0.55) (CoordY 0.66)) [] [] [RouteId 'R' 1],Stop (StopId 'S' 2) (Name "PlsHelp") (Point (CoordX 0.55) (CoordY 0.66)) [] [] [RouteId 'R' 1]], 
    routes = [Route (RouteId 'R' 1) (Name "imabouttodiefromhaskell") [StopId 'S' 1,StopId 'S' 2]], 
    paths = [], 
    trips = []})

multiQuery (multiQuery (multiQuery (multiQuery (stateWithQuery (emptyState) "create_stop(S1, PlsHelp, 0.55, 0.66)") "create_route(R1, imabouttodiefromhaskell, S1)") "create_stop(S2, PlsHelp, 0.55, 0.66)") "assign_stop_to_route(S2, R1)") "set_next_stop(S2, R1, S1)"
Left "Distance between stops is 0"

multiQuery (multiQuery (multiQuery (multiQuery (stateWithQuery (emptyState) "create_stop(S1, PlsHelp, 0.45, 0.46)") "create_route(R1, imabouttodiefromhaskell, S1)") "create_stop(S2, PlsHelp, 0.55, 0.66)") "assign_stop_to_route(S2, R1)") "set_next_stop(S2, R1, S1)"
Right (Just "Next stop set",
    State {stops = [Stop (StopId 'S' 1) (Name "PlsHelp") (Point (CoordX 0.45) (CoordY 0.46)) [] [] [RouteId 'R' 1],
    Stop (StopId 'S' 2) (Name "PlsHelp") (Point (CoordX 0.55) (CoordY 0.66)) [NextStop (StopId 'S' 1) (RouteId 'R' 1)] [] [RouteId 'R' 1]], 
    routes = [Route (RouteId 'R' 1) (Name "imabouttodiefromhaskell") [StopId 'S' 1,StopId 'S' 2]], 
    paths = [], 
    trips = []})